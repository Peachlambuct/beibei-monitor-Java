version: '3'
services:
  backend:
    container_name: beibei_monitor_backend
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - influxdb
      - redis
      - rabbitmq
      - mysql
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/monitor
      - SPRING_INFLUX_URL=http://influxdb:8086
      - SPRING_RABBITMQ_ADDRESSES=rabbitmq:5672
      - SPRING_DATA_REDIS_HOST=redis
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    container_name: beibei_monitor_frontend
    build: ./nginx
    ports:
      - "80:80"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 30s
      timeout: 10s
      retries: 3

  influxdb:
    container_name: monitor_influxdb
    image: influxdb:latest
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=beibei
      - DOCKER_INFLUXDB_INIT_PASSWORD=Aa123456
      - DOCKER_INFLUXDB_INIT_ORG=beibei
      - DOCKER_INFLUXDB_INIT_BUCKET=beibei
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8086/ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    container_name: monitor_redis
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    container_name: monitor_rabbitmq
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    container_name: monitor_mysql
    build: ./mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: monitor
      MYSQL_AUTHENTICATION_PLUGIN: caching_sha2_password  # 添加这一行
    restart: on-failure
    volumes: # 添加这一行
      - mysql_data:/var/lib/mysql  # 添加这一行
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:  # 添加这一行
  mysql_data:  # 添加这一行